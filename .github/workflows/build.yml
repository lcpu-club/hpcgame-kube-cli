name: Build Multi-Platform Binaries

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Enable manual trigger from GitHub UI

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'  # Adjust this to match your Go version
      
      - name: Install dependencies
        run: go mod download

      - name: Build for all platforms
        run: |
          mkdir -p build
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o build/linux-amd64/hpcgame
          GOOS=linux GOARCH=arm64 go build -o build/linux-arm64/hpcgame
          
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o build/windows-amd64/hpcgame.exe
          
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -o build/darwin-amd64/hpcgame
          GOOS=darwin GOARCH=arm64 go build -o build/darwin-arm64/hpcgame
      
      - name: Create release archives
        run: |
          mkdir -p dist
          
          # Linux archives
          tar -czvf dist/hpcgame-linux-amd64.tar.gz -C build/linux-amd64 hpcgame
          tar -czvf dist/hpcgame-linux-arm64.tar.gz -C build/linux-arm64 hpcgame
          
          # Windows archive (still using zip for Windows as it's more common)
          zip -j dist/hpcgame-windows-amd64.zip build/windows-amd64/hpcgame.exe
          
          # macOS archives
          tar -czvf dist/hpcgame-darwin-amd64.tar.gz -C build/darwin-amd64 hpcgame
          tar -czvf dist/hpcgame-darwin-arm64.tar.gz -C build/darwin-arm64 hpcgame
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*
          retention-days: 7
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}